Project 2.2: You are to write the image processing method: 3x3 median filter.

*** What do you have to do (Java):
    -  Implement 3x3 median filter using the input data as in project 1.
	  and run your 3x3 median filter program and output to Median3X3Out.txt
		// using the same input data as in project 1.
   - compute the histogram of your Median3X3Out.txt
   - threshold Median3X3Out.txt using threshold value at 38 (asking user interactively) 
	and output the threshold result to Median3X3Out_38.txt
   - prettyPrint Median3X3Out_38.txt

*** your hard copies to turn in should include:
   - cover page
   - *Only* the source code of your 3x3 median filter program
   - Print the histogram of Median3X3Out.txt
   - Print the prettyPrint of your Median3X3Out_38.txt


**************************************
Language: Java
Due date: Java soft copy: 9/11/2017 Monday before Midnight
Due date: Java hard copy:  9/12/2017 Tuesday in class

*************************************

I. Input: a txt file representing a grey-scale image with header.
	//** use the same data as in project 1.  
	//** the name of the input file to be in argv[0] for Java.

II. Output: //** the name of the output file, 
	Median3X3Out.txt, to be in argv[1] for Java
	
*******************************
III. Data structure:
*******************************
     
	- numRows (int)
	- numCols (int)
	- minVal (int)
	- maxVal (int)
	- newMin (int)
	- newMax (int)
 
	- mirrorFramedAry (int **) a 2D array, need to dynamically allocate at run time
			of size numRows + 2 by numCols + 2.

	- tempAry (int **) a 2D array, need to dynamically allocate at run time
			of size numRows + 2 by numCols + 2.

	- neighborAry[9](int) 1-D array for storing the 3 x 3 neighbors of pixel (i,j) 
	
    - methods:
	- constructor(s) // need to dynamically allocate the two (2-D) arrays 
				and assign values to numRows,..., etc.
	- mirrorFramed // mirrow framing the image as taught in class
	- loadImage // read from input file and load onto mirrorFramedAry
	- loadNeighbors // load the 3 x 3 neighbors of given pixel(i,j)onto neighborAry

	- Median3X3
	      

*******************************
III. 3 by 3 median filter algorithm 
*******************************
  
step 0: - open the input file and output file
	  - read the image header, the four numbers
	  - dynamically allocate mirrorFramedAry 
	  - dynamically alloicate tempAry

step 1: read the input file and load onto mirrowframeAry begin at [1,1]

step 2: mirrowFramed the mirrorFramedAr 

step 3: process the MirrorframedAry, from left to right and top to bottom
	  begin at (1, 1)

	  - neighborAry <- loadNeighbors // get mirrorframedAry[i,j]'s 3 X 3 neighborhoods  
	  
	  - tempAry[i,j] <-- sort neightborAry using selection sort algorithm,
					stop after the fifth smallest item is found,
				     then return the fifth item
	  
	  - keep tracking the newMin and newMax of tempAry

step 4: repeat step 3 until all pixels are processed

step 5: output the image header (numRows, numCols, newMin, newMax)  to Median3X3Out.txt 

step 6: output the tempAry, begin at [1,1], to Median3X3Out.txt 
	   
step 7: close input file and Median3X3Out.txt 

	